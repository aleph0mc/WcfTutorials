//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinFormsClient.CalcWebServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalcWebServiceRef.CalcWebServiceSoap")]
    public interface CalcWebServiceSoap {
        
        // CODEGEN: Generating message contract since element name MessageResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Message", ReplyAction="*")]
        WinFormsClient.CalcWebServiceRef.MessageResponse Message(WinFormsClient.CalcWebServiceRef.MessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Message", ReplyAction="*")]
        System.IAsyncResult BeginMessage(WinFormsClient.CalcWebServiceRef.MessageRequest request, System.AsyncCallback callback, object asyncState);
        
        WinFormsClient.CalcWebServiceRef.MessageResponse EndMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add", ReplyAction="*")]
        decimal Add(decimal A, decimal B);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Add", ReplyAction="*")]
        System.IAsyncResult BeginAdd(decimal A, decimal B, System.AsyncCallback callback, object asyncState);
        
        decimal EndAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Subtract", ReplyAction="*")]
        decimal Subtract(decimal A, decimal B);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Subtract", ReplyAction="*")]
        System.IAsyncResult BeginSubtract(decimal A, decimal B, System.AsyncCallback callback, object asyncState);
        
        decimal EndSubtract(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Message", Namespace="http://tempuri.org/", Order=0)]
        public WinFormsClient.CalcWebServiceRef.MessageRequestBody Body;
        
        public MessageRequest() {
        }
        
        public MessageRequest(WinFormsClient.CalcWebServiceRef.MessageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class MessageRequestBody {
        
        public MessageRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MessageResponse", Namespace="http://tempuri.org/", Order=0)]
        public WinFormsClient.CalcWebServiceRef.MessageResponseBody Body;
        
        public MessageResponse() {
        }
        
        public MessageResponse(WinFormsClient.CalcWebServiceRef.MessageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class MessageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string MessageResult;
        
        public MessageResponseBody() {
        }
        
        public MessageResponseBody(string MessageResult) {
            this.MessageResult = MessageResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CalcWebServiceSoapChannel : WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubtractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubtractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalcWebServiceSoapClient : System.ServiceModel.ClientBase<WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap>, WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap {
        
        private BeginOperationDelegate onBeginMessageDelegate;
        
        private EndOperationDelegate onEndMessageDelegate;
        
        private System.Threading.SendOrPostCallback onMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDelegate;
        
        private EndOperationDelegate onEndAddDelegate;
        
        private System.Threading.SendOrPostCallback onAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubtractDelegate;
        
        private EndOperationDelegate onEndSubtractDelegate;
        
        private System.Threading.SendOrPostCallback onSubtractCompletedDelegate;
        
        public CalcWebServiceSoapClient() {
        }
        
        public CalcWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalcWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalcWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalcWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<MessageCompletedEventArgs> MessageCompleted;
        
        public event System.EventHandler<AddCompletedEventArgs> AddCompleted;
        
        public event System.EventHandler<SubtractCompletedEventArgs> SubtractCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WinFormsClient.CalcWebServiceRef.MessageResponse WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap.Message(WinFormsClient.CalcWebServiceRef.MessageRequest request) {
            return base.Channel.Message(request);
        }
        
        public string Message() {
            WinFormsClient.CalcWebServiceRef.MessageRequest inValue = new WinFormsClient.CalcWebServiceRef.MessageRequest();
            inValue.Body = new WinFormsClient.CalcWebServiceRef.MessageRequestBody();
            WinFormsClient.CalcWebServiceRef.MessageResponse retVal = ((WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap)(this)).Message(inValue);
            return retVal.Body.MessageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap.BeginMessage(WinFormsClient.CalcWebServiceRef.MessageRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMessage(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMessage(System.AsyncCallback callback, object asyncState) {
            WinFormsClient.CalcWebServiceRef.MessageRequest inValue = new WinFormsClient.CalcWebServiceRef.MessageRequest();
            inValue.Body = new WinFormsClient.CalcWebServiceRef.MessageRequestBody();
            return ((WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap)(this)).BeginMessage(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WinFormsClient.CalcWebServiceRef.MessageResponse WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap.EndMessage(System.IAsyncResult result) {
            return base.Channel.EndMessage(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndMessage(System.IAsyncResult result) {
            WinFormsClient.CalcWebServiceRef.MessageResponse retVal = ((WinFormsClient.CalcWebServiceRef.CalcWebServiceSoap)(this)).EndMessage(result);
            return retVal.Body.MessageResult;
        }
        
        private System.IAsyncResult OnBeginMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMessage(callback, asyncState);
        }
        
        private object[] OnEndMessage(System.IAsyncResult result) {
            string retVal = this.EndMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMessageCompleted(object state) {
            if ((this.MessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MessageCompleted(this, new MessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MessageAsync() {
            this.MessageAsync(null);
        }
        
        public void MessageAsync(object userState) {
            if ((this.onBeginMessageDelegate == null)) {
                this.onBeginMessageDelegate = new BeginOperationDelegate(this.OnBeginMessage);
            }
            if ((this.onEndMessageDelegate == null)) {
                this.onEndMessageDelegate = new EndOperationDelegate(this.OnEndMessage);
            }
            if ((this.onMessageCompletedDelegate == null)) {
                this.onMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMessageCompleted);
            }
            base.InvokeAsync(this.onBeginMessageDelegate, null, this.onEndMessageDelegate, this.onMessageCompletedDelegate, userState);
        }
        
        public decimal Add(decimal A, decimal B) {
            return base.Channel.Add(A, B);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAdd(decimal A, decimal B, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAdd(A, B, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndAdd(System.IAsyncResult result) {
            return base.Channel.EndAdd(result);
        }
        
        private System.IAsyncResult OnBeginAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            decimal A = ((decimal)(inValues[0]));
            decimal B = ((decimal)(inValues[1]));
            return this.BeginAdd(A, B, callback, asyncState);
        }
        
        private object[] OnEndAdd(System.IAsyncResult result) {
            decimal retVal = this.EndAdd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddCompleted(object state) {
            if ((this.AddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCompleted(this, new AddCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAsync(decimal A, decimal B) {
            this.AddAsync(A, B, null);
        }
        
        public void AddAsync(decimal A, decimal B, object userState) {
            if ((this.onBeginAddDelegate == null)) {
                this.onBeginAddDelegate = new BeginOperationDelegate(this.OnBeginAdd);
            }
            if ((this.onEndAddDelegate == null)) {
                this.onEndAddDelegate = new EndOperationDelegate(this.OnEndAdd);
            }
            if ((this.onAddCompletedDelegate == null)) {
                this.onAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCompleted);
            }
            base.InvokeAsync(this.onBeginAddDelegate, new object[] {
                        A,
                        B}, this.onEndAddDelegate, this.onAddCompletedDelegate, userState);
        }
        
        public decimal Subtract(decimal A, decimal B) {
            return base.Channel.Subtract(A, B);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubtract(decimal A, decimal B, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubtract(A, B, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndSubtract(System.IAsyncResult result) {
            return base.Channel.EndSubtract(result);
        }
        
        private System.IAsyncResult OnBeginSubtract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            decimal A = ((decimal)(inValues[0]));
            decimal B = ((decimal)(inValues[1]));
            return this.BeginSubtract(A, B, callback, asyncState);
        }
        
        private object[] OnEndSubtract(System.IAsyncResult result) {
            decimal retVal = this.EndSubtract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubtractCompleted(object state) {
            if ((this.SubtractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubtractCompleted(this, new SubtractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubtractAsync(decimal A, decimal B) {
            this.SubtractAsync(A, B, null);
        }
        
        public void SubtractAsync(decimal A, decimal B, object userState) {
            if ((this.onBeginSubtractDelegate == null)) {
                this.onBeginSubtractDelegate = new BeginOperationDelegate(this.OnBeginSubtract);
            }
            if ((this.onEndSubtractDelegate == null)) {
                this.onEndSubtractDelegate = new EndOperationDelegate(this.OnEndSubtract);
            }
            if ((this.onSubtractCompletedDelegate == null)) {
                this.onSubtractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubtractCompleted);
            }
            base.InvokeAsync(this.onBeginSubtractDelegate, new object[] {
                        A,
                        B}, this.onEndSubtractDelegate, this.onSubtractCompletedDelegate, userState);
        }
    }
}
